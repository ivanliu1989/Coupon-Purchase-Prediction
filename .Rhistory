head(user_list)
write.csv(user_list, "../data/en/user_list_en.csv", row.names = F)
prefecture_locations = read.csv("../data/prefecture_locations.csv", as.is=T)
head(prefecture_locations)
names(trans)=c("jp","en_pref"); prefecture_locations=merge(prefecture_locations,trans,by.x="PREF_NAME",by.y="jp",all.x=T)
head(prefecture_locations)
prefecture_locations <- prefecture_locations[,c(5,3,4)]
head(prefecture_locations)
dim(prefecture_locations)
length(unique(prefecture_locations$en_pref))
prefecture_locations = read.csv("../data/prefecture_locations.csv", as.is=T)
names(trans)=c("jp","en_pref"); prefecture_locations=merge(prefecture_locations,trans,by.x="PREF_NAME",by.y="jp",all.x=T)
# names(trans)=c("jp","en_prefectual_office"); prefecture_locations=merge(prefecture_locations,trans,by.x="PREFECTUAL_OFFICE",by.y="jp",all.x=T)
prefecture_locations <- prefecture_locations[,c(5,3,4)]
write.csv(prefecture_locations, "../data/en/prefecture_locations_en.csv", row.names = F)
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
?rm
rm(list=ls());gc()
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
head(cpdtr)
head(cpltr)
train <- merge(cpdtr,cpltr)
dim(cpdtr)
dim(cpltr)
dim(train)
table(cpdtr$PURCHASEID_hash)
head(table(cpdtr$PURCHASEID_hash))
tail(table(cpdtr$PURCHASEID_hash))
head(train)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","ken_name","small_area_name")]
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
head(train)
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
head(train)
is.na(train)
train[is.na(train)] <- 1
head(train)
table(train$DISCOUNT_PRICE)
?cut
cut(train$DISCOUNT_PRICE,breaks=c(-0.01,0,1000,10000,50000,100000,Inf),labels=c("free","cheap","moderate","expensive","high","luxury"))
train$DISCOUNT_PRICE <- cut(train$DISCOUNT_PRICE,breaks=c(-0.01,0,1000,10000,50000,100000,Inf),labels=c("free","cheap","moderate","expensive","high","luxury"))
head(train)
train[,c(1,2)]
train <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)]))
head(train)
test <- train[train$USER_ID_hash=="dummyuser",]
test <- test[,-2]
train <- train[train$USER_ID_hash!="dummyuser",]
head(train)
head(test)
uchar <- aggregate(.~USER_ID_hash, data=train[,-1],FUN=mean)
head(uchar)
score = as.matrix(uchar[,2:ncol(uchar)]) %*% t(as.matrix(test[,2:ncol(test)]))
head(scor)
head(score)
dim(score)
?do.call
i <- 1
score[1,]
order(score[i,], decreasing = TRUE)
test$COUPON_ID_hash[order(score[i,], decreasing = TRUE)][1:10]
#calculation of cosine similairties of users and coupons
score = as.matrix(uchar[,2:ncol(uchar)]) %*% t(as.matrix(test[,2:ncol(test)]))
#order the list of coupons according to similairties and take only first 10 coupons
uchar$PURCHASED_COUPONS <- do.call(rbind, lapply(1:nrow(uchar),FUN=function(i){
purchased_cp <- paste(test$COUPON_ID_hash[order(score[i,], decreasing = TRUE)][1:10],collapse=" ")
return(purchased_cp)
}))
head(uchar)
head(ulist)
uchar <- merge(ulist, uchar, all.x=TRUE)
submission <- uchar[,c("USER_ID_hash","PURCHASED_COUPONS")]
write.csv(submission, file="cosine_sim.csv", row.names=FALSE)
head(t(as.matrix(test[,2:ncol(test)])))
head(as.matrix(test[,2:ncol(test)]))
head(score)
score[1,]
as.matrix(uchar[,2:ncol(uchar)])[1,]
uchar <- aggregate(.~USER_ID_hash, data=train[,-1],FUN=mean)
as.matrix(uchar[,2:ncol(uchar)])[1,]
head(uchar)
as.matrix(uchar[,2:ncol(uchar)])[1,]
t(as.matrix(test[,2:ncol(test)]))[,1]
as.matrix(uchar[,2:ncol(uchar)])[1,] %*% t(as.matrix(test[,2:ncol(test)]))[,1]
score[1,1]
score[1,]
order(score[1,], decreasing=T)
score[1,order(score[1,], decreasing=T)]
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
log10(train$DISCOUNT_PRICE)
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
head(train)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
head(train)
train$PRICE_RATE
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
#feature engineering
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
head(train)
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
#feature engineering
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
head(train)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
?model.matrix
head(train)
head(train)
train <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)],
contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)))
head(train)
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
#feature engineering
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))
sapply(train[,-c(1,2)], is.factor)==TRUE)
sapply(train[,-c(1,2)], is.factor)
which(sapply(train[,-c(1,2)], is.factor)==TRUE)
train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))]
?lapply
lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)
contrasts
?contrasts
train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))]
a <- train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))]
head(a)
contrasts(a[,1])
table(a[,1])
table(a[1,])
contrasts(a[1,])
contrasts(a[,2])
contrasts(a[,3])
a <-
cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)],
contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)))
b <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)]))
dim(a)
dim(b)
head(a)
head(b)
colnames(a)
colnames(b)
a[,-c(names(b))]
a[,-c(names(b))]
names(b)
a[,-names(b)]
a[,names(b)]
head(a[,names(b)])
head(a[,which(names(a) %in% names(b))])
head(a[,-which(names(a) %in% names(b))])
train <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)],
contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)))
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
#feature engineering
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
#convert the factors to columns of 0's and 1's
train <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)],
contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)))
test <- train[train$USER_ID_hash=="dummyuser",]
test <- test[,-2]
train <- train[train$USER_ID_hash!="dummyuser",]
uchar <- aggregate(.~USER_ID_hash, data=train[,-1],FUN=mean)
head(uchar)
head(train)
uchar$DISCOUNT_PRICE <- 1
uchar$PRICE_RATE <- 1
head(uchar)
require(Matrix)
rep(2,13)
W <- as.matrix(Diagonal(x=c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55))))
dim(W)
head(W)
score = as.matrix(uchar[,2:ncol(uchar)]) %*% W %*% t(as.matrix(test[,2:ncol(test)]))
head(score)
head(uchar)
dim(as.matrix(uchar[,2:ncol(uchar)]))
dim(t(as.matrix(test[,2:ncol(test)])))
c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55))
W
head(c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55)))
head(W)
tail(W)
c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55))
uchar$PURCHASED_COUPONS <- do.call(rbind, lapply(1:nrow(uchar),FUN=function(i){
purchased_cp <- paste(test$COUPON_ID_hash[order(score[i,], decreasing = TRUE)][1:10],collapse=" ")
return(purchased_cp)
}))
submission <- merge(ulist, uchar, all.x=TRUE)
submission <- submission[,c("USER_ID_hash","PURCHASED_COUPONS")]
write.csv(submission, file="cosine_sim.csv", row.names=FALSE)
head(submission)
names(uchar[,2:ncol(uchar)])
c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55))
dim(as.matrix(uchar[,2:ncol(uchar)]))
length(c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55)))
dim(t(as.matrix(test[,2:ncol(test)])))
head(t(as.matrix(test[,2:ncol(test)])))
head(test)
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
head(cplte)
ulist <- read.csv("../data/en/user_list_en.csv")
head(ulist)
### Kaggle Scripts: Ponpare Coupon Purchase Prediction ###
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
#read in all the input data
cpdtr <- read.csv("../data/en/coupon_detail_train_en.csv")
cpltr <- read.csv("../data/en/coupon_list_train_en.csv")
cplte <- read.csv("../data/en/coupon_list_test_en.csv")
ulist <- read.csv("../data/en/user_list_en.csv")
#making of the train set
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
"en_genre","DISCOUNT_PRICE","PRICE_RATE",
"USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
"USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
"USABLE_DATE_BEFORE_HOLIDAY","en_ken","en_small_area")]
train <- rbind(train,cpchar)
#NA imputation
train[is.na(train)] <- 1
#feature engineering
train$DISCOUNT_PRICE <- 1/log10(train$DISCOUNT_PRICE)
train$PRICE_RATE <- (train$PRICE_RATE*train$PRICE_RATE)/(100*100)
#convert the factors to columns of 0's and 1's
train <- cbind(train[,c(1,2)],model.matrix(~ -1 + .,train[,-c(1,2)],
contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], contrasts, contrasts=FALSE)))
#separate the test from train
test <- train[train$USER_ID_hash=="dummyuser",]
test <- test[,-2]
train <- train[train$USER_ID_hash!="dummyuser",]
#data frame of user characteristics
uchar <- aggregate(.~USER_ID_hash, data=train[,-1],FUN=mean)
uchar$DISCOUNT_PRICE <- 1
uchar$PRICE_RATE <- 1
#Weight Matrix: GENRE_NAME DISCOUNT_PRICE PRICE_RATE USABLE_DATE_ ken_name small_area_name
require(Matrix)
W <- as.matrix(Diagonal(x=c(rep(2,13), rep(1,1), rep(0,1), rep(0,9), rep(1,47), rep(4,55))))
#calculation of cosine similairties of users and coupons
score = as.matrix(uchar[,2:ncol(uchar)]) %*% W %*% t(as.matrix(test[,2:ncol(test)]))
#order the list of coupons according to similairties and take only first 10 coupons
uchar$PURCHASED_COUPONS <- do.call(rbind, lapply(1:nrow(uchar),FUN=function(i){
purchased_cp <- paste(test$COUPON_ID_hash[order(score[i,], decreasing = TRUE)][1:10],collapse=" ")
return(purchased_cp)
}))
#make submission
submission <- merge(ulist, uchar, all.x=TRUE)
submission <- submission[,c("USER_ID_hash","PURCHASED_COUPONS")]
head(submission)
dim(submission)
head(test)
dim(test)
setwd('/Users/ivanliu/Downloads/kaggle/Coupon-Purchase-Prediction')
rm(list=ls());gc()
k = 3
coupon_list_train <- read.csv("../input/coupon_list_train.csv")
coupon_list_test <- read.csv("../input/coupon_list_test.csv")
coupon_list_train <- read.csv("../data/en/coupon_list_train_en.csv")
coupon_list_test <- read.csv("../data/en/coupon_list_test_en.csv")
coupon_list_train$year_from = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDFROM, format = "%Y-%m-%d"), "%Y"))
head(coupon_list_train)
coupon_list_train$month_from = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDFROM, format = "%Y-%m-%d"), "%m"))
coupon_list_train$day_from = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDFROM, format = "%Y-%m-%d"), "%d"))
coupon_list_train$year_end = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDEND, format = "%Y-%m-%d"), "%Y"))
coupon_list_train$month_end = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDEND, format = "%Y-%m-%d"), "%m"))
coupon_list_train$day_end = as.numeric(format(as.POSIXlt(coupon_list_train$VALIDEND, format = "%Y-%m-%d"), "%d"))
head(coupon_list_train)
coupon_list_train = subset(coupon_list_train, select = -c(VALIDFROM, VALIDEND))
head(coupon_list_train)
coupon_list_test$year_from = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDFROM, format = "%Y-%m-%d"), "%Y"))
coupon_list_test$month_from = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDFROM, format = "%Y-%m-%d"), "%m"))
coupon_list_test$day_from = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDFROM, format = "%Y-%m-%d"), "%d"))
coupon_list_test$year_end = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDEND, format = "%Y-%m-%d"), "%Y"))
coupon_list_test$month_end = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDEND, format = "%Y-%m-%d"), "%m"))
coupon_list_test$day_end = as.numeric(format(as.POSIXlt(coupon_list_test$VALIDEND, format = "%Y-%m-%d"), "%d"))
coupon_list_test = subset(coupon_list_test, select = -c(VALIDFROM, VALIDEND))
for(i in 1:ncol(coupon_list_train)){
if(is.numeric(coupon_list_train[,i])){
scaled = as.numeric(scale(c(coupon_list_train[,i], coupon_list_test[,i])))
coupon_list_train[,i] = scaled[1:nrow(coupon_list_train)]
coupon_list_test[,i] = scaled[(nrow(coupon_list_train) + 1):length(scaled)]
}
}
head(coupon_list_train)
rm(scaled)
library(StatMatch)
install.packages('StatMatch')
library(StatMatch)
join <- rbind(coupon_list_train, coupon_list_test)
dim(coupon_list_train)
dim(coupon_list_test)
coupon_list_train <- join[1:19413,]
coupon_list_test <- join[19414:19723,]
distances <- gower.dist(data.x = coupon_list_train, data.y = coupon_list_test)
distances <- as.matrix(distances)
head(distances)
dim(distance)
dim(distances)
dim(coupon_list_train)
num_row = dim(distances)[1]
num_col = dim(distances)[2]
recommended_coupons <- vector("list", num_row)
recommended_coupons
for(i in 1:num_row){
row_distance = distances[i,]
indices = numeric(k)
for(j in 1:k){
pos_min = which.min(row_distance)
indices[j] = pos_min
row_distance[pos_min] = 1
}
recommended_coupons[[i]] = as.character(coupon_list_test$COUPON_ID_hash[indices])
}
recommended_coupons[[1]]
recommended_coupons[[2]]
recommended_coupons[[3]]
recommended_coupons[1
]
recom = character(num_row)
recom
num_row
i = 1
for(recommendation in recommended_coupons){
recom[i] = paste(recommendation, collapse = " ")
i = i + 1
}
recom
rm(recommended_coupons, i, indices, j, k, num_col, num_row, pos_max, recommendation, row_distance, distances, join)
coupon_list_train$recom = recom
rm(coupon_list_test, recom)
user_list <- read.csv("../data/en/user_list_en.csv")
coupon_detail_train <- read.csv("../data/en/coupon_detail_train_en.csv")
head(coupon_detail_train)
join <- merge(coupon_detail_train, coupon_list_train)
head(join)
join <- subset(join, select = c(USER_ID_hash, recom))
rm(coupon_detail_train, coupon_list_train)
gc()
pos <- numeric(nrow(user_list))
pos
head(user_list)
for(i in 1:nrow(user_list)){
print(i)
position <- match(user_list$USER_ID_hash[i], join$USER_ID_hash, nomatch = 32284)[1]
pos[i] <- position
}
match(user_list$USER_ID_hash[i], join$USER_ID_hash, nomatch = 32284)
match(user_list$USER_ID_hash[i], join$USER_ID_hash, nomatch = 32284)[1]
user_list$USER_ID_hash[i]
join$USER_ID_hash
join[pos, ]
join <- join[pos, ]
names(join) <- c("USER_ID_hash", "PURCHASED_COUPONS")
sub <- subset(user_list, select = c(USER_ID_hash))
sub
sub$PURCHASED_COUPONS = join$PURCHASED_COUPONS
head(sub)
